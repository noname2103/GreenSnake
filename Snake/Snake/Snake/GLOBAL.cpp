//#include "stdafx.h"
#include "global.h"

SDL_Window * g_window;
SDL_Renderer * g_renderer;

unsigned long GAME_PALETTE[CR_MAX_COLORS] =
{
	0x000000,0x0000AA,0x00AA00,0x00AAAA,
	0xAA0000,0xAA00AA,0xAA5500,0xAAAAAA,
	0x555555,0x5555FF,0x55FF55,0x55FFFF,
	0xFF5555,0xFF55FF,0xFFFF55,0xFFFFFF,
	0x95A7C4,0x5D6B82
};

char DIGITS[10 * DIGIT_HEIGHT] =
{
	0x07, 0x05, 0x05, 0x05, 0x07,
	0x06, 0x02, 0x02, 0x02, 0x07,
	0x07, 0x01, 0x07, 0x04, 0x07,
	0x07, 0x01, 0x03, 0x01, 0x07,
	0x05, 0x05, 0x07, 0x01, 0x01,
	0x07, 0x04, 0x07, 0x01, 0x07,
	0x07, 0x04, 0x07, 0x05, 0x07,
	0x07, 0x01, 0x01, 0x01, 0x01,
	0x07, 0x05, 0x07, 0x05, 0x07,
	0x07, 0x05, 0x07, 0x01, 0x01
};

void setColor(int c)
{
	Uint32 color = GAME_PALETTE[c];
	SDL_SetRenderDrawColor(g_renderer,
		(color >> 16),
		(color >> 8) & 0xFF,
		color & 0xFF,
		0XFF);
}

void rectDraw(int x, int y, int w, int h, unsigned long color)
{
	SDL_Rect rc = { x,y,w,h };
	setColor(color);
	SDL_RenderFillRect(g_renderer, &rc);
}

void digitDraw(int x, int y, int digit)
{
	for (int i = 0; i < DIGIT_HEIGHT; i++) {
		char value = DIGITS[digit*DIGIT_HEIGHT + i];
		for (int j = 0; j < DIGIT_WIDTH; j++) {
			if (value & 0x4)
				rectDraw(x + j*BOARD_CELL,
					y + i*BOARD_CELL,
					BOARD_CELL, BOARD_CELL, CR_GRAY);
			value <<= 1;                /* dịch trái 1 bit */
		}
	}
}